services:
  server:
    container_name: continuum-server
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    restart: unless-stopped
    ports:
      - '3002:3001'
    env_file:
      - ./apps/server/.env
    environment:
      - DATABASE_URL=mongodb://db:27017/continuum?replicaSet=rs0
      - FRONTEND_URL=http://localhost:3003
      - PORT=3001
      - GOOGLE_CALLBACK_URL=http://localhost:3003/api/auth/callback/google
    volumes:
      - uploads_data:/app/uploads
    networks:
      - continuum-network
    depends_on:
      db:
        condition: service_healthy

  web:
    container_name: continuum-web
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      args:
        - DOCKER_BUILD=true
        - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
    restart: unless-stopped
    ports:
      - '3003:3000'
    environment:
      - DOCKER_ENV=true
      - NEXTAUTH_URL=http://localhost:3003
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXT_PUBLIC_APP_URL=http://localhost:3003
      - NEXT_PUBLIC_API_URL=http://localhost:3002
      - INTERNAL_API_URL=http://server:3001
    env_file:
      - ./apps/web/.env
    networks:
      - continuum-network
    depends_on:
      - server

  db:
    image: mongo:6
    container_name: continuum-db
    restart: unless-stopped
    ports:
      - '27017:27017'
    command: >
      sh -c "
        mongod --replSet rs0 --bind_ip_all &
        MONGO_PID=$!
        until mongosh --eval \"db.adminCommand('ping')\" --quiet; do
          echo 'Waiting for MongoDB to start...'
          sleep 1
        done
        echo 'MongoDB started. Initiating replica set...'
        mongosh --eval \"rs.initiate({_id: 'rs0', members: [{_id: 0, host: 'db:27017'}]})\"
        echo 'Replica set initiated.'
        wait $MONGO_PID
      "
    volumes:
      - db_data:/data/db
    networks:
      - continuum-network
    healthcheck:
      test: ['CMD', 'sh', '-c', 'mongosh --eval "db.runCommand(''ismaster'').ismaster" | grep ''true''']
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  uploads_data:
  db_data:

networks:
  continuum-network:
    driver: bridge
